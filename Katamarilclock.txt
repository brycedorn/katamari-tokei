Katamari Clock

Features to implement:
	Basics:
	 - Circle with radius dependent on time
	 - Gif (prince) with size dependent on time
	   - Both of these will also have position dependent on time
	 - Smaller circles added to edge every minute
	 - Hue of background changes from light blue to orange to navy to yellow & resets
	 - Number of hour showin in background
	 - Resets at end of minute/hour

	 Longer term:
	 - Add stars/clouds/other identifiers for time of day
	 - Animate the prince running
	 - Animate ball spinning
	 - If doing circular implementation, animate minute circles moving around edge of screen
	 - Animate katamari rolling off screen at end of minute / new one rolling onto screen for new minute


Pseudocode:

clock{
	
    static:

	int hours = current hour //24 hr format
	int minutes = current minute
	int seconds = current seconds

	//set background, if new hour then check for update

	if(hour > 20 || hour < 7) //nighttime
		background = deep navy color
		stars = true
	if(hour >= 7 && hour < 10) //morning
		background = very light blue
		sun rays = true //moving in circle would look nice
		clouds = true
	if(hour >= 10 && hour < 4) //day
		background = light blue
		sun = true
		clouds = true
	if(hour >= 4 && hour < 7) //dusk
		background = reddish orange
		sun rays = true

	//mechanics

	double radius = seconds * whatever
	double katacoordsX
		   katacoordsY = something that moves in arc to right

	double princesize = seconds * whatever
	double princecoordsX //should stay same throughout
						 //roughly 30% from left
		   princecoordsY = something that moves in arc to left

	draw prince()
	draw kata()

	if(seconds == 59)
		do{
			katamari roll off screen to right
			new katamari roll on screen from left
			if(minutes!=60)
				new katamari added to minute display
			else make some sort of animation to collect minutes, update hour
		}
}